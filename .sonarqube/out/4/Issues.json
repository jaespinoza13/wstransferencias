{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Compilador de Microsoft (R) Visual C#",
        "version": "4.0.0.0",
        "fileVersion": "4.0.0-6.21526.21 (c7d6f9fa)",
        "semanticVersion": "4.0.0",
        "language": "es-ES"
      },
      "results": [
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Posible argumento de referencia nulo para el parámetro \"req_beneficiarios\" en \"ResBeneficiarios BeneficiariosNeg.procesar_datos_beneficiarios(ReqBeneficiarios req_beneficiarios, string str_operacion)\".",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/SistemasMego/wsTransferencias_net_6/wsTransferencias.Neg/wsTransferenciasNeg.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 104,
                  "endLine": 31,
                  "endColumn": 121
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Posible argumento de referencia nulo para el parámetro \"validar_beneficiarios\" en \"ResBeneficiarios BeneficiariosNeg.validar_registro_beneficiarios(ReqBeneficiarios validar_beneficiarios, string str_operacion)\".",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/SistemasMego/wsTransferencias_net_6/wsTransferencias.Neg/wsTransferenciasNeg.cs",
                "region": {
                  "startLine": 36,
                  "startColumn": 106,
                  "endLine": 36,
                  "endColumn": 126
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'wsTransferenciasNeg' to match pascal case naming rules, consider using 'WsTransferenciasNeg'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/SistemasMego/wsTransferencias_net_6/wsTransferencias.Neg/wsTransferenciasNeg.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 18,
                  "endLine": 12,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3604",
          "level": "warning",
          "message": "Remove the member initializer, all constructors set an initial value for the member.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/SistemasMego/wsTransferencias_net_6/wsTransferencias.Neg/BeneficiariosNeg.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 34,
                  "endLine": 23,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CS8604": {
          "id": "CS8604",
          "shortDescription": "Posible argumento de referencia nulo",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8604)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "S101": {
          "id": "S101",
          "shortDescription": "Types should be named in PascalCase",
          "fullDescription": "Shared naming conventions allow teams to collaborate efficiently. This rule checks whether or not type names are using PascalCase. To reduce noise, two consecutive upper case characters are allowed unless they form the whole type name. So, MyXClass is compliant, but XC on its own is not.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-101",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        },
        "S3604": {
          "id": "S3604",
          "shortDescription": "Member initializer values should not be redundant",
          "fullDescription": "Fields, properties and events can be initialized either inline or in the constructor. Initializing them inline and in the constructor at the same time is redundant; the inline initialization will be overridden.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3604",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        }
      }
    }
  ]
}